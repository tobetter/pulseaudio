Index: pulseaudio-0.9.14/src/pulsecore/sink.c
===================================================================
--- pulseaudio-0.9.14.orig/src/pulsecore/sink.c	2009-01-31 15:24:30.000000000 -0500
+++ pulseaudio-0.9.14/src/pulsecore/sink.c	2009-01-31 15:24:55.000000000 -0500
@@ -641,7 +641,7 @@
 
     pa_assert(length > 0);
 
-    n = s->thread_info.state == PA_SINK_RUNNING ? fill_mix_info(s, &length, info, MAX_MIX_CHANNELS) : 0;
+    n = fill_mix_info(s, &length, info, MAX_MIX_CHANNELS);
 
     if (n == 0) {
 
@@ -684,8 +684,7 @@
         result->index = 0;
     }
 
-    if (s->thread_info.state == PA_SINK_RUNNING)
-        inputs_drop(s, info, n, result);
+    inputs_drop(s, info, n, result);
 
     pa_sink_unref(s);
 }
@@ -715,7 +714,7 @@
 
     pa_assert(length > 0);
 
-    n = s->thread_info.state == PA_SINK_RUNNING ? fill_mix_info(s, &length, info, MAX_MIX_CHANNELS) : 0;
+    n = fill_mix_info(s, &length, info, MAX_MIX_CHANNELS);
 
     if (n == 0) {
         if (target->length > length)
@@ -764,8 +763,7 @@
         pa_memblock_release(target->memblock);
     }
 
-    if (s->thread_info.state == PA_SINK_RUNNING)
-        inputs_drop(s, info, n, target);
+    inputs_drop(s, info, n, target);
 
     pa_sink_unref(s);
 }
Index: pulseaudio-0.9.14/src/pulsecore/source.c
===================================================================
--- pulseaudio-0.9.14.orig/src/pulsecore/source.c	2009-01-31 15:24:30.000000000 -0500
+++ pulseaudio-0.9.14/src/pulsecore/source.c	2009-01-31 15:24:55.000000000 -0500
@@ -428,9 +428,6 @@
     pa_assert(PA_SOURCE_IS_OPENED(s->thread_info.state));
     pa_assert(chunk);
 
-    if (s->thread_info.state != PA_SOURCE_RUNNING)
-        return;
-
     if (s->thread_info.soft_muted || !pa_cvolume_is_norm(&s->thread_info.soft_volume)) {
         pa_memchunk vchunk = *chunk;
 
@@ -469,9 +466,6 @@
     pa_assert(o->thread_info.direct_on_input);
     pa_assert(chunk);
 
-    if (s->thread_info.state != PA_SOURCE_RUNNING)
-        return;
-
     if (s->thread_info.soft_muted || !pa_cvolume_is_norm(&s->thread_info.soft_volume)) {
         pa_memchunk vchunk = *chunk;
 
