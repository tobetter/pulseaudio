Index: pulseaudio-0.9.13/src/pulsecore/once.c
===================================================================
--- pulseaudio-0.9.13.orig/src/pulsecore/once.c	2009-01-03 18:47:32.000000000 -0500
+++ pulseaudio-0.9.13/src/pulsecore/once.c	2009-01-03 18:48:07.000000000 -0500
@@ -28,13 +28,13 @@
 
 #include "once.h"
 
-int pa_once_begin(pa_once *control) {
+pa_bool_t pa_once_begin(pa_once *control) {
     pa_mutex *m;
 
     pa_assert(control);
 
     if (pa_atomic_load(&control->done))
-        return 0;
+        return FALSE;
 
     pa_atomic_inc(&control->ref);
 
@@ -50,15 +50,17 @@
              * wait until it is unlocked */
             pa_mutex_lock(m);
 
+            pa_assert(pa_atomic_load(&control->done));
+
             pa_once_end(control);
-            return 0;
+            return FALSE;
         }
 
         pa_assert_se(m = pa_mutex_new(FALSE, FALSE));
         pa_mutex_lock(m);
 
         if (pa_atomic_ptr_cmpxchg(&control->mutex, NULL, m))
-            return 1;
+            return TRUE;
 
         pa_mutex_unlock(m);
         pa_mutex_free(m);
@@ -91,4 +93,3 @@
         pa_once_end(control);
     }
 }
-
Index: pulseaudio-0.9.13/src/pulsecore/once.h
===================================================================
--- pulseaudio-0.9.13.orig/src/pulsecore/once.h	2009-01-03 18:47:43.000000000 -0500
+++ pulseaudio-0.9.13/src/pulsecore/once.h	2009-01-03 18:48:07.000000000 -0500
@@ -38,7 +38,7 @@
     }
 
 /* Not to be called directly, use the macros defined below instead */
-int pa_once_begin(pa_once *o);
+pa_bool_t pa_once_begin(pa_once *o);
 void pa_once_end(pa_once *o);
 
 #define PA_ONCE_BEGIN                                                   \
