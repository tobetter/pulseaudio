Index: pulseaudio-0.9.16~test4+git20090819.f4f16ab1/src/utils/pacmd.c
===================================================================
--- pulseaudio-0.9.16~test4+git20090819.f4f16ab1.orig/src/utils/pacmd.c	2009-08-18 23:29:57.000000000 -0400
+++ pulseaudio-0.9.16~test4+git20090819.f4f16ab1/src/utils/pacmd.c	2009-08-18 23:30:36.000000000 -0400
@@ -25,7 +25,7 @@
 
 #include <assert.h>
 #include <signal.h>
-#include <sys/poll.h>
+#include <sys/select.h>
 #include <sys/socket.h>
 #include <unistd.h>
 #include <errno.h>
@@ -45,13 +45,6 @@
 
 int main(int argc, char*argv[]) {
 
-    enum {
-        WATCH_STDIN,
-        WATCH_STDOUT,
-        WATCH_SOCKET,
-        N_WATCH
-    };
-
     pid_t pid ;
     int fd = -1;
     int ret = 1, i;
@@ -60,7 +53,6 @@
     size_t ibuf_index, ibuf_length, obuf_index, obuf_length;
     char *cli;
     pa_bool_t ibuf_eof, obuf_eof, ibuf_closed, obuf_closed;
-    struct pollfd pollfd[N_WATCH];
 
     setlocale(LC_ALL, "");
     bindtextdomain(GETTEXT_PACKAGE, PULSE_LOCALEDIR);
@@ -116,7 +108,7 @@
             size_t k;
 
             k = PA_MIN(sizeof(ibuf) - ibuf_length, strlen(argv[i]));
-            memcpy(ibuf + ibuf_length, argv[i], k);
+            memcpy(ibuf + ibuf_length, argv[1], k);
             ibuf_length += k;
 
             if (ibuf_length < sizeof(ibuf)) {
@@ -128,45 +120,38 @@
         ibuf_eof = TRUE;
     }
 
-    pa_zero(pollfd);
-
-    pollfd[WATCH_STDIN].fd = STDIN_FILENO;
-    pollfd[WATCH_STDOUT].fd = STDOUT_FILENO;
-    pollfd[WATCH_SOCKET].fd = fd;
-
     for (;;) {
+        fd_set ifds, ofds;
+
         if (ibuf_eof &&
             obuf_eof &&
             ibuf_length <= 0 &&
             obuf_length <= 0)
             break;
 
-        pollfd[WATCH_STDIN].events = pollfd[WATCH_STDOUT].events = pollfd[WATCH_SOCKET].events = 0;
+        FD_ZERO(&ifds);
+        FD_ZERO(&ofds);
 
         if (obuf_length > 0)
-            pollfd[WATCH_STDOUT].events |= POLLOUT;
+            FD_SET(1, &ofds);
         else if (!obuf_eof)
-            pollfd[WATCH_SOCKET].events |= POLLIN;
+            FD_SET(fd, &ifds);
 
         if (ibuf_length > 0)
-            pollfd[WATCH_SOCKET].events |= POLLOUT;
+            FD_SET(fd, &ofds);
         else if (!ibuf_eof)
-            pollfd[WATCH_STDIN].events |= POLLIN;
+            FD_SET(0, &ifds);
 
-        if (poll(pollfd, N_WATCH, -1) < 0) {
-
-            if (errno == EINTR)
-                continue;
-
-            pa_log(_("poll(): %s"), strerror(errno));
+        if (select(FD_SETSIZE, &ifds, &ofds, NULL, NULL) < 0) {
+            pa_log(_("select(): %s"), strerror(errno));
             goto fail;
         }
 
-        if (pollfd[WATCH_STDIN].revents & POLLIN) {
+        if (FD_ISSET(0, &ifds)) {
             ssize_t r;
             pa_assert(!ibuf_length);
 
-            if ((r = pa_read(STDIN_FILENO, ibuf, sizeof(ibuf), NULL)) <= 0) {
+            if ((r = pa_read(0, ibuf, sizeof(ibuf), NULL)) <= 0) {
                 if (r < 0) {
                     pa_log(_("read(): %s"), strerror(errno));
                     goto fail;
@@ -179,7 +164,7 @@
             }
         }
 
-        if (pollfd[WATCH_SOCKET].revents & POLLIN) {
+        if (FD_ISSET(fd, &ifds)) {
             ssize_t r;
             pa_assert(!obuf_length);
 
@@ -196,26 +181,21 @@
             }
         }
 
-        if (pollfd[WATCH_STDOUT].revents & POLLHUP) {
-            obuf_eof = TRUE;
-            obuf_length = 0;
-        } else if (pollfd[WATCH_STDOUT].revents & POLLOUT) {
+        if (FD_ISSET(1, &ofds)) {
             ssize_t r;
             pa_assert(obuf_length);
 
-            if ((r = pa_write(STDOUT_FILENO, obuf + obuf_index, obuf_length, NULL)) < 0) {
+            if ((r = pa_write(1, obuf + obuf_index, obuf_length, NULL)) < 0) {
                 pa_log(_("write(): %s"), strerror(errno));
                 goto fail;
             }
 
             obuf_length -= (size_t) r;
             obuf_index += obuf_index;
+
         }
 
-        if (pollfd[WATCH_SOCKET].revents & POLLHUP) {
-            ibuf_eof = TRUE;
-            ibuf_length = 0;
-        } if (pollfd[WATCH_SOCKET].revents & POLLOUT) {
+        if (FD_ISSET(fd, &ofds)) {
             ssize_t r;
             pa_assert(ibuf_length);
 
@@ -229,14 +209,14 @@
         }
 
         if (ibuf_length <= 0 && ibuf_eof && !ibuf_closed) {
-            pa_close(STDIN_FILENO);
+            pa_close(0);
             shutdown(fd, SHUT_WR);
             ibuf_closed = TRUE;
         }
 
         if (obuf_length <= 0 && obuf_eof && !obuf_closed) {
             shutdown(fd, SHUT_RD);
-            pa_close(STDOUT_FILENO);
+            pa_close(1);
             obuf_closed = TRUE;
         }
     }
