Index: pulseaudio-0.9.18/src/pulsecore/svolume_mmx.c
===================================================================
--- pulseaudio-0.9.18.orig/src/pulsecore/svolume_mmx.c	2009-09-22 22:17:02.000000000 -0400
+++ pulseaudio-0.9.18/src/pulsecore/svolume_mmx.c	2009-09-22 22:17:53.000000000 -0400
@@ -57,12 +57,14 @@
       " punpcklwd %%mm4, "#s"        \n\t" /* .. |    0  |   p0  | */                   \
       " pcmpgtw "#v", %%mm4          \n\t" /* .. |    0  | s(vl) | */                   \
       " pand "#s", %%mm4             \n\t" /* .. |    0  |  (p0) |  (vl >> 15) & p */   \
-      " movq "#s", %%mm5             \n\t"                                              \
-      " pmulhw "#v", "#s"            \n\t" /* .. |    0  | vl*p0 | */                   \
-      " paddw %%mm4, "#s"            \n\t" /* .. |    0  | vl*p0 | + sign correct */    \
-      " psrld $16, "#v"              \n\t" /* .. |    0  |   vh  | */                   \
-      " pmaddwd %%mm5, "#v"          \n\t" /* .. |    p0 * vh    | */                   \
-      " paddd "#s", "#v"             \n\t" /* .. |    p0 * v0    | */                   \
+      " movq %%mm6, %%mm5            \n\t" /* .. |  ffff |   0   | */                   \
+      " pand "#v", %%mm5             \n\t" /* .. |   vh  |   0   | */                   \
+      " por %%mm5, %%mm4             \n\t" /* .. |   vh  |  (p0) | */                   \
+      " pmulhw "#s", "#v"            \n\t" /* .. |    0  | vl*p0 | */                   \
+      " paddw %%mm4, "#v"            \n\t" /* .. |   vh  | vl*p0 | vh + sign correct */ \
+      " pslld $16, "#s"              \n\t" /* .. |   p0  |    0  | */                   \
+      " por %%mm7, "#s"              \n\t" /* .. |   p0  |    1  | */                   \
+      " pmaddwd "#s", "#v"           \n\t" /* .. |    p0 * v0    | */                   \
       " packssdw "#v", "#v"          \n\t" /* .. | p1*v1 | p0*v0 | */
 
 /* approximately advances %3 = (%3 + a) % b. This function requires that
@@ -103,6 +105,10 @@
     __asm__ __volatile__ (
         " xor %3, %3                    \n\t"
         " sar $1, %2                    \n\t" /* length /= sizeof (int16_t) */
+        " pcmpeqw %%mm6, %%mm6          \n\t" /* .. |  ffff |  ffff | */
+        " pcmpeqw %%mm7, %%mm7          \n\t" /* .. |  ffff |  ffff | */
+        " pslld  $16, %%mm6             \n\t" /* .. |  ffff |     0 | */
+        " psrld  $31, %%mm7             \n\t" /* .. |     0 |     1 | */
 
         " test $1, %2                   \n\t" /* check for odd samples */
         " je 2f                         \n\t"
