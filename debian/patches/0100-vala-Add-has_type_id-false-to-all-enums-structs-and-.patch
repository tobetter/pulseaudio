From fb107fc77056b6bfcc7902d3ee048c271c212145 Mon Sep 17 00:00:00 2001
From: Arun Raghavan <arun.raghavan@collabora.co.uk>
Date: Wed, 31 Aug 2011 11:21:57 +0530
Subject: [PATCH 100/111] vala: Add has_type_id=false to all enums, structs
 and classes

Since none of our types is derived from GType, explicitly signal this.
The default value for this attribute changed at some point, breaking our
bindings.
---
 vala/libpulse.vapi |  102 ++++++++++++++++++++++++++--------------------------
 1 files changed, 51 insertions(+), 51 deletions(-)

diff --git a/vala/libpulse.vapi b/vala/libpulse.vapi
index 3e595f8..59375e1 100644
--- a/vala/libpulse.vapi
+++ b/vala/libpulse.vapi
@@ -52,7 +52,7 @@ namespace PulseAudio {
         [CCode (cname="pa_free_cb_t", has_target=false)]
         public delegate void FreeCb(void *p);
 
-        [CCode (cname="pa_sample_format_t", cprefix="PA_SAMPLE_")]
+        [CCode (cname="pa_sample_format_t", cprefix="PA_SAMPLE_", has_type_id=false)]
         public enum SampleFormat {
                 U8,
                 ALAW,
@@ -105,7 +105,7 @@ namespace PulseAudio {
         public struct usec : uint64 {
         }
 
-        [CCode (cname="pa_sample_spec")]
+        [CCode (cname="pa_sample_spec", has_type_id=false)]
         public struct SampleSpec {
                 public SampleFormat format;
                 public uint32 rate;
@@ -168,7 +168,7 @@ namespace PulseAudio {
                 return (string) buffer;
         }
 
-        [CCode (cname="pa_volume_t")]
+        [CCode (cname="pa_volume_t", has_type_id=false)]
         public struct Volume : uint32 {
 
                 [CCode (cname="PA_SW_VOLUME_SNPRINT_DB_MAX")]
@@ -240,7 +240,7 @@ namespace PulseAudio {
         [CCode (cname="PA_RATE_MAX")]
         public const int RATE_MAX;
 
-        [CCode (cname="pa_cvolume")]
+        [CCode (cname="pa_cvolume", has_type_id=false)]
         public struct CVolume {
                 public uint8 channels;
                 // TODO: Replace array length with CHANNELS_MAX once vala's bug #647788 is fixed
@@ -374,7 +374,7 @@ namespace PulseAudio {
                 public unowned CVolume? dec(Volume minus = 1);
         }
 
-        [CCode (cname="pa_channel_map")]
+        [CCode (cname="pa_channel_map", has_type_id=false)]
         public struct ChannelMap {
                 public uint8 channels;
                 // TODO: Replace array length with CHANNELS_MAX once vala's bug #647788 is fixed
@@ -448,11 +448,11 @@ namespace PulseAudio {
                 public ChannelPositionMask mask();
         }
 
-        [CCode (cname="pa_channel_position_mask_t")]
+        [CCode (cname="pa_channel_position_mask_t", has_type_id=false)]
         public struct ChannelPositionMask : uint64 {
         }
 
-        [CCode (cname="pa_channel_position_t", cprefix="PA_CHANNEL_POSITION_")]
+        [CCode (cname="pa_channel_position_t", cprefix="PA_CHANNEL_POSITION_", has_type_id=false)]
         public enum ChannelPosition {
                 INVALID,
                 MONO,
@@ -515,7 +515,7 @@ namespace PulseAudio {
                 public static ChannelPosition from_string(string s);
         }
 
-        [CCode (cname="pa_channel_map_def_t", cprefix="PA_CHANNEL_MAP_")]
+        [CCode (cname="pa_channel_map_def_t", cprefix="PA_CHANNEL_MAP_", has_type_id=false)]
         public enum ChannelMapDef {
                 AIFF,
                 WAVEEX,
@@ -527,7 +527,7 @@ namespace PulseAudio {
         }
 
         [Compact]
-        [CCode (cname="pa_proplist", cprefix="pa_proplist_", free_function="pa_proplist_free")]
+        [CCode (cname="pa_proplist", cprefix="pa_proplist_", free_function="pa_proplist_free", has_type_id=false)]
         public class Proplist {
 
                 [CCode (cname="PA_PROP_MEDIA_NAME")]
@@ -688,7 +688,7 @@ namespace PulseAudio {
                 public bool is_empty();
         }
 
-        [CCode (cname="pa_update_mode_t", cprefix="PA_UPDATE_")]
+        [CCode (cname="pa_update_mode_t", cprefix="PA_UPDATE_", has_type_id=false)]
         public enum UpdateMode {
                 SET,
                 MERGE,
@@ -698,7 +698,7 @@ namespace PulseAudio {
         [CCode (cname="PA_OK")]
         public const int OK;
 
-        [CCode (cname="int", cprefix="PA_ERR_")]
+        [CCode (cname="int", cprefix="PA_ERR_", has_type_id=false)]
         public enum Error {
                 ACCESS,
                 COMMAND,
@@ -733,14 +733,14 @@ namespace PulseAudio {
 
         public delegate void VoidFunc();
 
-        [CCode (cname="pa_spawn_api")]
+        [CCode (cname="pa_spawn_api", has_type_id=false)]
         public struct SpawnApi {
                 VoidFunc? prefork;
                 VoidFunc? postfork;
                 VoidFunc? atfork;
         }
 
-        [CCode (cname="pa_io_event_flags_t", cprefix="PA_IO_EVENT_")]
+        [CCode (cname="pa_io_event_flags_t", cprefix="PA_IO_EVENT_", has_type_id=false)]
         public enum IoEventFlags {
                 NULL,
                 INPUT,
@@ -750,22 +750,22 @@ namespace PulseAudio {
         }
 
         [Compact]
-        [CCode (cname="pa_io_event", unref_function="", ref_function="")]
+        [CCode (cname="pa_io_event", unref_function="", ref_function="", has_type_id=false)]
         public struct IoEvent {
         }
 
         [Compact]
-        [CCode (cname="pa_time_event", unref_function="", ref_function="")]
+        [CCode (cname="pa_time_event", unref_function="", ref_function="", has_type_id=false)]
         public struct TimeEvent {
         }
 
         [Compact]
-        [CCode (cname="pa_defer_event", unref_function="", ref_function="")]
+        [CCode (cname="pa_defer_event", unref_function="", ref_function="", has_type_id=false)]
         public struct DeferEvent {
         }
 
         [Compact]
-        [CCode (cname="pa_signal_event", cprefix="pa_signal_", free_function="pa_signal_free")]
+        [CCode (cname="pa_signal_event", cprefix="pa_signal_", free_function="pa_signal_free", has_type_id=false)]
         public struct SignalEvent {
 
                 [CCode (cname="pa_signal_new")]
@@ -775,7 +775,7 @@ namespace PulseAudio {
         }
 
         [Compact]
-        [CCode (cname="pa_mainloop_api", unref_function="", ref_function="")]
+        [CCode (cname="pa_mainloop_api", unref_function="", ref_function="", has_type_id=false)]
         public class MainLoopApi {
                 public void* userdata;
 
@@ -843,7 +843,7 @@ namespace PulseAudio {
         public delegate int PollFunc(pollfd[] ufds, int timeout);
 
         [Compact]
-        [CCode (cname="pa_mainloop", cprefix="pa_mainloop_", free_function="pa_mainloop_free")]
+        [CCode (cname="pa_mainloop", cprefix="pa_mainloop_", free_function="pa_mainloop_free", has_type_id=false)]
         public class MainLoop {
 
                 [CCode (cname="pa_mainloop_new")]
@@ -881,10 +881,10 @@ namespace PulseAudio {
         }
 
         [Compact]
-        [CCode (cname="pa_operation", cprefix="pa_operation_", unref_function="pa_operation_unref", ref_function="pa_operation_ref")]
+        [CCode (cname="pa_operation", cprefix="pa_operation_", unref_function="pa_operation_unref", ref_function="pa_operation_ref", has_type_id=false)]
         public class Operation {
 
-                [CCode (cname="pa_operation_state_t", cprefix="PA_OPERATION_")]
+                [CCode (cname="pa_operation_state_t", cprefix="PA_OPERATION_", has_type_id=false)]
                 public enum State {
                         RUNNING,
                         DONE,
@@ -896,16 +896,16 @@ namespace PulseAudio {
         }
 
         [Compact]
-        [CCode (cname="pa_context", cprefix="pa_context_", unref_function="pa_context_unref", ref_function="pa_context_ref")]
+        [CCode (cname="pa_context", cprefix="pa_context_", unref_function="pa_context_unref", ref_function="pa_context_ref", has_type_id=false)]
         public class Context {
 
-                [CCode (cname="pa_context_flags_t", cprefix="PA_CONTEXT_")]
+                [CCode (cname="pa_context_flags_t", cprefix="PA_CONTEXT_", has_type_id=false)]
                 public enum Flags {
                         NOAUTOSPAWN,
                         NOFAIL
                 }
 
-                [CCode (cname="pa_context_state_t", cprefix="PA_CONTEXT_")]
+                [CCode (cname="pa_context_state_t", cprefix="PA_CONTEXT_", has_type_id=false)]
                 public enum State {
                         UNCONNECTED,
                         CONNECTING,
@@ -915,11 +915,11 @@ namespace PulseAudio {
                         FAILED,
                         TERMINATED;
 
-                        [CCode (cname="PA_CONTEXT_IS_GOOD")]
+                        [CCode (cname="PA_CONTEXT_IS_GOOD", has_type_id=false)]
                         public bool IS_GOOD();
                 }
 
-                [CCode (cname="pa_subscription_mask_t", cprefix="PA_SUBSCRIPTION_MASK_")]
+                [CCode (cname="pa_subscription_mask_t", cprefix="PA_SUBSCRIPTION_MASK_", has_type_id=false)]
                 public enum SubscriptionMask {
                         NULL,
                         SINK,
@@ -937,7 +937,7 @@ namespace PulseAudio {
                         public bool match_flags(SubscriptionEventType t);
                 }
 
-                [CCode (cname="pa_subscription_event_type_t", cprefix="PA_SUBSCRIPTION_EVENT_")]
+                [CCode (cname="pa_subscription_event_type_t", cprefix="PA_SUBSCRIPTION_EVENT_", has_type_id=false)]
                 public enum SubscriptionEventType {
                         SINK,
                         SOURCE,
@@ -1085,10 +1085,10 @@ namespace PulseAudio {
         }
 
         [Compact]
-        [CCode (cname="pa_stream", cprefix="pa_stream_", unref_function="pa_stream_unref", ref_function="pa_stream_ref")]
+        [CCode (cname="pa_stream", cprefix="pa_stream_", unref_function="pa_stream_unref", ref_function="pa_stream_ref", has_type_id=false)]
         public class Stream {
 
-                [CCode (cname="pa_stream_flags_t", cprefix="PA_STREAM_")]
+                [CCode (cname="pa_stream_flags_t", cprefix="PA_STREAM_", has_type_id=false)]
                 public enum Flags {
                         START_CORKED,
                         INTERPOLATE_TIMING,
@@ -1110,7 +1110,7 @@ namespace PulseAudio {
                         FAIL_ON_SUSPEND
                 }
 
-                [CCode (cname="pa_stream_state_t", cprefix="PA_STREAM_")]
+                [CCode (cname="pa_stream_state_t", cprefix="PA_STREAM_", has_type_id=false)]
                 public enum State {
                         UNCONNECTED,
                         CREATING,
@@ -1122,7 +1122,7 @@ namespace PulseAudio {
                         public bool IS_GOOD();
                 }
 
-                [CCode (cname="pa_stream_direction_t", cprefix="PA_STREAM_")]
+                [CCode (cname="pa_stream_direction_t", cprefix="PA_STREAM_", has_type_id=false)]
                 public enum Direction {
                         NODIRECTION,
                         PLAYBACK,
@@ -1130,7 +1130,7 @@ namespace PulseAudio {
                         UPLOAD
                 }
 
-                [CCode (cname="pa_seek_mode_t", cprefix="PA_SEEK_")]
+                [CCode (cname="pa_seek_mode_t", cprefix="PA_SEEK_", has_type_id=false)]
                 public enum SeekMode {
                         RELATIVE,
                         ABSOLUTE,
@@ -1138,7 +1138,7 @@ namespace PulseAudio {
                         RELATIVE_END
                 }
 
-                [CCode (cname="pa_buffer_attr")]
+                [CCode (cname="pa_buffer_attr", has_type_id=false)]
                 public struct BufferAttr {
                         uint32 maxlength;
                         uint32 tlength;
@@ -1147,7 +1147,7 @@ namespace PulseAudio {
                         uint32 fragsize;
                 }
 
-                [CCode (cname="pa_timing_info")]
+                [CCode (cname="pa_timing_info", has_type_id=false)]
                 public struct TimingInfo {
                         timeval timestamp;
                         int synchronized_clocks;
@@ -1240,14 +1240,14 @@ namespace PulseAudio {
                 public uint32 get_monitor_stream();
         }
 
-        [CCode (cname="pa_sink_port_info")]
+        [CCode (cname="pa_sink_port_info", has_type_id=false)]
         public struct SinkPortInfo {
                 public string name;
                 public string description;
                 public uint32 priority;
         }
 
-        [CCode (cname="pa_sink_info")]
+        [CCode (cname="pa_sink_info", has_type_id=false)]
         public struct SinkInfo {
                 public string name;
                 public uint32 index;
@@ -1273,14 +1273,14 @@ namespace PulseAudio {
                 public SinkPortInfo* active_port;
         }
 
-        [CCode (cname="pa_source_port_info")]
+        [CCode (cname="pa_source_port_info", has_type_id=false)]
         public struct SourcePortInfo {
                 public string name;
                 public string description;
                 public uint32 priority;
         }
 
-        [CCode (cname="pa_source_info")]
+        [CCode (cname="pa_source_info", has_type_id=false)]
         public struct SourceInfo {
                 public string name;
                 public uint32 index;
@@ -1306,7 +1306,7 @@ namespace PulseAudio {
                 public SourcePortInfo* active_port;
         }
 
-        [CCode (cname="pa_server_info")]
+        [CCode (cname="pa_server_info", has_type_id=false)]
         public struct ServerInfo {
                 public string user_name;
                 public string host_name;
@@ -1318,7 +1318,7 @@ namespace PulseAudio {
                 public ChannelMap channel_map;
         }
 
-        [CCode (cname="pa_module_info")]
+        [CCode (cname="pa_module_info", has_type_id=false)]
         public struct ModuleInfo {
                 public uint32 index;
                 public string name;
@@ -1327,7 +1327,7 @@ namespace PulseAudio {
                 public Proplist proplist;
         }
 
-        [CCode (cname="pa_client_info")]
+        [CCode (cname="pa_client_info", has_type_id=false)]
         public struct ClientInfo {
                 public uint32 index;
                 public string name;
@@ -1336,7 +1336,7 @@ namespace PulseAudio {
                 public Proplist proplist;
         }
 
-        [CCode (cname="pa_card_profile_info")]
+        [CCode (cname="pa_card_profile_info", has_type_id=false)]
         public struct CardProfileInfo {
                 public string name;
                 public string description;
@@ -1345,7 +1345,7 @@ namespace PulseAudio {
                 public uint32 priority;
         }
 
-        [CCode (cname="pa_card_info")]
+        [CCode (cname="pa_card_info", has_type_id=false)]
         public struct CardInfo {
                 public uint32 index;
                 public string name;
@@ -1357,7 +1357,7 @@ namespace PulseAudio {
                 public Proplist proplist;
         }
 
-        [CCode (cname="pa_sink_input_info")]
+        [CCode (cname="pa_sink_input_info", has_type_id=false)]
         public struct SinkInputInfo {
                 public uint32 index;
                 public string name;
@@ -1375,7 +1375,7 @@ namespace PulseAudio {
                 public Proplist proplist;
         }
 
-        [CCode (cname="pa_source_output_info")]
+        [CCode (cname="pa_source_output_info", has_type_id=false)]
         public struct SourceOutputInfo {
                 public uint32 index;
                 public string name;
@@ -1391,7 +1391,7 @@ namespace PulseAudio {
                 public Proplist proplist;
         }
 
-        [CCode (cname="pa_stat_info")]
+        [CCode (cname="pa_stat_info", has_type_id=false)]
         public struct StatInfo {
                 public uint32 memblock_total;
                 public uint32 memblock_total_size;
@@ -1400,7 +1400,7 @@ namespace PulseAudio {
                 public uint32 scache_size;
         }
 
-        [CCode (cname="pa_sample_info")]
+        [CCode (cname="pa_sample_info", has_type_id=false)]
         public struct SampleInfo {
                 public uint32 index;
                 public string name;
@@ -1414,7 +1414,7 @@ namespace PulseAudio {
                 public Proplist proplist;
         }
 
-        [CCode (cname="pa_sink_flags_t", cprefix="PA_SINK_")]
+        [CCode (cname="pa_sink_flags_t", cprefix="PA_SINK_", has_type_id=false)]
         public enum SinkFlags {
                 HW_VOLUME_CTRL,
                 LATENCY,
@@ -1426,7 +1426,7 @@ namespace PulseAudio {
                 DYNAMIC_LATENCY
         }
 
-        [CCode (cname="pa_source_flags_t", cprefix="PA_SOURCE_")]
+        [CCode (cname="pa_source_flags_t", cprefix="PA_SOURCE_", has_type_id=false)]
         public enum SourceFlags {
                 HW_VOLUME_CTRL,
                 LATENCY,
@@ -1437,7 +1437,7 @@ namespace PulseAudio {
                 DYNAMIC_LATENCY
         }
 
-        [CCode (cname="pa_sink_state_t", cprefix="PA_SINK_")]
+        [CCode (cname="pa_sink_state_t", cprefix="PA_SINK_", has_type_id=false)]
         public enum SinkState {
                 INVALID_STATE,
                 RUNNING,
@@ -1448,7 +1448,7 @@ namespace PulseAudio {
                 public bool IS_OPENED();
         }
 
-        [CCode (cname="pa_source_state_t", cprefix="PA_SOURCE_")]
+        [CCode (cname="pa_source_state_t", cprefix="PA_SOURCE_", has_type_id=false)]
         public enum SourceState {
                 INVALID_STATE,
                 RUNNING,
-- 
1.7.5.4

