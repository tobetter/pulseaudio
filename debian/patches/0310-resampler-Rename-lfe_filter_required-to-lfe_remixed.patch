From 2cfc5df87faa1ba642afa1ccc7f4c9b920139a79 Mon Sep 17 00:00:00 2001
From: David Henningsson <david.henningsson@canonical.com>
Date: Mon, 30 Mar 2015 15:12:53 +0200
Subject: [PATCH 310/311] resampler: Rename "lfe_filter_required" to
 "lfe_remixed"

Just refactoring to make the variable name better.

Signed-off-by: David Henningsson <david.henningsson@canonical.com>
---
 src/pulsecore/resampler.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

Index: pulseaudio/src/pulsecore/resampler.c
===================================================================
--- pulseaudio.orig/src/pulsecore/resampler.c	2015-05-13 15:00:43.758148502 +0800
+++ pulseaudio/src/pulsecore/resampler.c	2015-05-13 15:00:43.754148501 +0800
@@ -40,7 +40,7 @@
 
 static int copy_init(pa_resampler *r);
 
-static void setup_remap(const pa_resampler *r, pa_remap_t *m, bool *lfe_filter_required);
+static void setup_remap(const pa_resampler *r, pa_remap_t *m, bool *lfe_remixed);
 static void free_remap(pa_remap_t *m);
 
 static int (* const init_table[])(pa_resampler *r) = {
@@ -303,7 +303,7 @@
         pa_resample_flags_t flags) {
 
     pa_resampler *r = NULL;
-    bool lfe_filter_required = false;
+    bool lfe_remixed = false;
 
     pa_assert(pool);
     pa_assert(a);
@@ -392,9 +392,9 @@
 
     /* set up the remap structure */
     if (r->map_required)
-        setup_remap(r, &r->remap, &lfe_filter_required);
+        setup_remap(r, &r->remap, &lfe_remixed);
 
-    if (lfe_filter_required && crossover_freq > 0) {
+    if (lfe_remixed && crossover_freq > 0) {
         pa_sample_spec wss = r->o_ss;
         wss.format = r->work_format;
         /* FIXME: For now just hardcode maxrewind to 3 seconds */
@@ -764,7 +764,7 @@
     return ON_OTHER;
 }
 
-static void setup_remap(const pa_resampler *r, pa_remap_t *m, bool *lfe_filter_required) {
+static void setup_remap(const pa_resampler *r, pa_remap_t *m, bool *lfe_remixed) {
     unsigned oc, ic;
     unsigned n_oc, n_ic;
     bool ic_connected[PA_CHANNELS_MAX];
@@ -773,7 +773,7 @@
 
     pa_assert(r);
     pa_assert(m);
-    pa_assert(lfe_filter_required);
+    pa_assert(lfe_remixed);
 
     n_oc = r->o_ss.channels;
     n_ic = r->i_ss.channels;
@@ -786,7 +786,7 @@
     memset(m->map_table_i, 0, sizeof(m->map_table_i));
 
     memset(ic_connected, 0, sizeof(ic_connected));
-    *lfe_filter_required = false;
+    *lfe_remixed = false;
 
     if (r->flags & PA_RESAMPLER_NO_REMAP) {
         for (oc = 0; oc < PA_MIN(n_ic, n_oc); oc++)
@@ -900,7 +900,7 @@
                     ic_connected[ic] = true;
 
                     if (a == PA_CHANNEL_POSITION_MONO && on_lfe(b) && !(r->flags & PA_RESAMPLER_NO_LFE))
-                        *lfe_filter_required = true;
+                        *lfe_remixed = true;
                 }
                 else if (b == PA_CHANNEL_POSITION_MONO) {
                     m->map_table_f[oc][ic] = 1.0f / (float) n_ic;
@@ -984,7 +984,7 @@
                     /* Please note that a channel connected to LFE doesn't
                      * really count as connected. */
 
-                    *lfe_filter_required = true;
+                    *lfe_remixed = true;
                 }
             }
         }
